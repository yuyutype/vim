[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
function LightlineTags()
  return '%{gutentags#statusline("[Generating\ tags...]")}'
endfunction
function! LLAle()
  let l:count = ale#statusline#Count(bufnr(''))
  let l:errors = l:count.error + l:count.style_error
  let l:warnings = l:count.warning + l:count.style_warning
  return l:count.total == 0 ? 'OK' : 'E:' . l:errors . ' W:' . l:warnings
  endfunction
let g:lightline = {
  \ 'colorscheme': 'wombat',
  \ 'active': {
  \   'left': [ [ 'mode', 'paste' ],
  \             [ 'readonly', 'filename', 'modified' ] ],
  \   'right': [ [ 'lineinfo' ],
  \              [ 'ale' ],
  \              [ 'percent' ],
  \              [ 'fileformat', 'fileencoding', 'filetype' ],
  \              [ 'tags' ] ]
  \ },
  \ 'component_function': {
  \   'ale': 'LLAle'
  \ },
  \ 'component_expand': {
  \   'tags': 'LightlineTags'
  \ },
  \ }
'''

[[plugins]]
repo = 'flazz/vim-colorschemes'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
on_if = '!has("nvim")'

[[plugins]]
repo = 'roxma/nvim-yarp'

# [[plugins]]
# repo = 'Shougo/deoppet.nvim'

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_add = '''
let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'tbodt/deoplete-tabnine'
build = './install.sh'

[[plugins]]
repo = 'skywind3000/gutentags_plus'
hook_add = '''
let g:gutentags_auto_add_gtags_cscope = 0
'''

[[plugins]]
repo = 'ludovicchabant/vim-gutentags'
hook_add = '''
" let g:gutentags_trace = 1
let g:gutentags_file_list_command = 'rg --files'
let g:gutentags_modules = ['ctags', 'gtags_cscope']
let g:gutentags_cache_dir = expand('~/.vim/gutentags')
let g:utentags_ctags_exclude = [
  \ '*.css',
  \ '*.html',
  \ '*.js',
  \ '*.json',
  \ '*.xml',
  \ '*.phar',
  \ '*.ini',
  \ '*.rst',
  \ '*.rs',
  \ '*.md',
  \ '*vendor/*/test*',
  \ '*vendor/*/Test*',
  \ '*vendor/*/fixture*',
  \ '*vendor/*/Fixture*',
  \ '*var/cache*',
  \'*var/log*'
  \ ]
augroup MyGutentagsStatusLineRefresher
  autocmd!
  autocmd User GutentagsUpdating call lightline#update()
  autocmd User GutentagsUpdated call lightline#update()
augroup END
'''

[[plugins]]
repo = 'godlygeek/tabular'

[[plugins]]
repo = 'joker1007/vim-markdown-quote-syntax'

[[plugins]]
repo = 'rcmdnk/vim-markdown'
hook_add = '''
let g:vim_markdown_conceal = 0
let g:vim_markdown_fenced_languages = []
set nofoldenable
'''

[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''

let g:ale_linters = {
  \ 'java': [],
  \ 'javascript': ['eslint'],
  \ 'typescript': ['eslint'],
  \ 'python': ['flake8'],
  \ }
let g:ale_lint_on_text_changed = 'never'

let g:ale_fixers = {
  \ 'javascript': ['eslint'],
  \ 'typescript': ['eslint'],
  \ 'python': ['autopep8', 'black', 'yapf', 'isort']
  \ }

let g:ale_fix_on_save = 1
'''

[[plugins]]
repo = 'scalameta/nvim-metals'

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
hook_add = '''
    let g:LanguageClient_serverCommands = {
        \ 'rust': ['~/.cargo/bin/rustup', 'run', 'stable', 'rls'],
        \ 'scala': ['nvim-metals'],
        \ 'java': ['/usr/local/bin/jdtls'],
        \ 'javascript': ['/usr/local/bin/javascript-typescript-stdio'],
        \ 'typescript': ['/usr/local/bin/javascript-typescript-stdio'],
        \ 'python': ['/usr/local/bin/pyls'],
        \ 'haskell': ['/Users/sasaki.yuji/.local/bin/hie-wrapper']
    \ }
    " not stop completion $ & /
    set hidden

    augroup LanguageClient_config
        autocmd!
        autocmd User LanguageClientStarted setlocal signcolumn=yes
        autocmd User LanguageClientStopped setlocal signcolumn=auto
    augroup END

    let g:LanguageClient_autoStart = 1
    let g:LanguageClient_hoverPreview = "Never"
    if &filetype == 'haskell'
        let g:LanguageClient_rootMarkers = ['*.cabal', 'stack.yaml']
    endif

    nnoremap <F5> :call LanguageClient_contextMenu()<CR>
    " Or map each action separately
    nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
    nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
    nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>
'''

[[plugins]]
repo = 'junegunn/fzf'

[[plugins]]
repo = 'leafgarland/typescript-vim'
