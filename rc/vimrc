"dein Scripts-----------------------------
if &compatible
  set nocompatible               " Be iMproved
endif

function! s:source_rc(path, ...) abort "{{{
  let use_global = get(a:000, 0, !has('vim_starting'))
  let abspath = resolve(expand('~/.vim/rc/' . a:path))
  if !use_global
    execute 'source' fnameescape(abspath)
    return
  endif

  " substitute all 'set' to 'setglobal'
  let content = map(readfile(abspath),
        \ 'substitute(v:val, "^\\W*\\zsset\\ze\\W", "setglobal", "")')
  " create tempfile and source the tempfile
  let tempfile = tempname()
  try
    call writefile(content, tempfile)
    execute printf('source %s', fnameescape(tempfile))
  finally
    if filereadable(tempfile)
      call delete(tempfile)
    endif
  endtry
endfunction"}}}

" Set augroup.
augroup MyAutoCmd
  autocmd!
augroup END

if !has('vim_starting')
  call dein#call_hook('source')
  call dein#call_hook('post_source')

  syntax enable
  filetype plugin indent on
endif

"---------------------------------------------------------------------------
" init:
"

if has('vim_starting')
  call s:source_rc('init.rc.vim')
endif

"---------------------------------------------------------------------------
" dein:
"

call s:source_rc('dein.rc.vim')

"---------------------------------------------------------------------------
" Mappings:
"

call s:source_rc('mappings.rc.vim')

" SSH クライアントの設定によってはマウスが使える（putty だと最初からいける）
set mouse=n

syntax on
hi Comment ctermfg=2
hi Directory ctermfg=2

" not space tab
" set noexpandtab
" inoremap <CR> <CR>x<BS>
" nnoremap o ox<BS>
" nnoremap O Ox<BS>

" only space tab
set expandtab

set tabstop=4 shiftwidth=4 softtabstop=0 smartindent smarttab autoindent
set number
colorscheme tango2

" Always display statusline.
set laststatus=2

" Show <TAB> and <CR>
set list
set listchars=tab:▸\ ,trail:-,precedes:«,nbsp:%

" ファイルの最後に改行が無くてもそのままにする
set nofixeol
